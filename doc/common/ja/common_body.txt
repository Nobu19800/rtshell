パス
====

''rtshell''は*パス*でRTCツリーのオブジェクトを個別します。パスは
オブジェクトのアドレスです。ネームサーバとネームコンテクストは
ダイレクトリで、マネージャとRTコンポーネントはファイルです。POSIXの
``cat``等のコマンドと同じように、コマンドに渡したパスはrtshellの
ワーキングダイレクトリにつけます。rtshellのワーキングダイレクトリは
``RTCSH_CWD``という環境変数に保存されて、``rtcwd``というコマンドで
編集することができます。

対応できるパスはコマンド実行時のネームサーバによって変わります。
``RTCSH_NAMESERVERS``という環境変数の値に記録されたネームサーバとパスに
指定された ネームサーバを組み合わせて提供します。

例えば、``/localhost/comp0.rtc``は``localhost``にあるネームサーバに登録
された``comp0.rtc``というRTコンポーネントを示します。
``/localhost/manager/comp0.rtc``は``localhost``にあるネームサーバの下の
``manager``というダイレクトリに登録された``comp0.rtc``というRT
コンポーネントを示します。``./comp0.rtc``は現在のワーキングダイレクトリ
の中にある``comp0.rtc``というRTコンポーネントを示します。

ポートはパスに追加して示すことができます。パスとポート名の間にコロン
（「:」）を入力します。例えば、``/localhost/comp0.rtc:data``は
``comp0.rtc``というRTコンポーネントの``data``というポートを示します。

新しいポートを作るコマンドもあります。この場合、オプションをパスに追加
することができます。使えるオプションは作られたポートの名とフォーマッタ
です。示す方法は以下の用です::

  path:port.name#formatter

例::

  /localhost/blurg.host_cxt/comp0.rtc:input.stuff#a_printer

作られたポートの名は``stuff``でデータは``a_printer``という関数で
ターミナルに表示すると示します。（``a_printer``の関数はPythonが使える
場所に提供する必要です。普通にユーザが提供するモジュールに提供します。）
作られたポートは``comp0.rtc``の``input``というポートに接続します。

「name」という分は必要ではありません。書いていない場合は「.」字も
書かないでください。例::

  /localhost/blurg.host_cxt/comp0.rtc:input#a_printer

「formatter」という分は必要ではありません。書いていない場合は「.」字も
書かないでください。例::

  /localhost/blurg.host_cxt/comp0.rtc:input.stuff

環境変数
========

  RTCTREE_ORB_ARGS
    ORBを作る時渡す変数です。セミコロンで個別します。必要ではありません。

  RTCTREE_NAMESERVERS
    RTCツリーを作る時に連絡するネームサーバのアドレスです。アドレスをセミ
    コロンで個別します。リストされたアドレスはすべてRTCツリーに追加して
    rtshellで見ることができるようになります。必要ではありません。

  RTSH_CWD
    rtshellの現在のワーキングダイレクトリ。rtshellが自動的に設定します。
    設定しないでください。

普通にユーザは設定する変数は``RTCTREE_NAMESERVERS``のみです。よく使うネ
ームサーバに設定すると便利です。例えば、Bashシェルの場合、以下のコマンド
は``localhost``、``192.168.0.1:65346``および``example.com``にあるネーム
サーバをいつもrtshellで提供するようにします。

  $ export RTCTREE_NAMESERVERS=localhost;192.168.0.1:65346;example.com


返す変数
========

成功の場合はゼロを返します。失敗の場合はゼロではない値を返します。

デバグ情報とエラーは''stderr''に出します。

