======
rtcomp
======

---------------------------
create composite components
---------------------------

.. include:: ../common/docinfo_block.txt

Synopsis
========

rtcomp [options] <manager>

Description
===========

Composes multiple components running in the same manager into a single
composite component, exposing a selection of their ports externally.
The type of execution context that the components will be executed in
can be selected. Components to be included can be specified using the
``-c`` option; all components whose ports are exposed (using ``-p``) are
automatically included.

Options
=======

-c COMPS, --comp=COMPS
  Component to include in the composite component without exporting any
  ports. Specify this option multiple times to add multiple components.

-n NAME, --name=NAME
  Instance name of the new component. [Default: CompositeRTC]

-o OPTIONS, --options=OPTIONS
  Extra options to pass to the component on creation.  Must begin with
  an "&"

-p PORTS, --port=PORTS
  Port to export from the composite component. All components with
  exported ports are automatically included in the composite component.

-t TYPE, --type=TYPE
  Type of composite component to create. [Default:
  PeriodicECSharedComposite]

.. include:: ../common/common_opts.txt

.. include:: ../common/common_body.txt

Examples
========

::

  $ rtcomp /localhost/manager.mgr -c /localhost/Motor0.rtc -p
  /localhost/Controller0.rtc:in -p /localhost/Motor0.rtc:out
  -n MotorUnit

Create a composite component using the ``Motor0.rtc`` and
``Controller0.rtc`` components, exposing the ``in`` port of
``Controller0.rtc`` and the ``out`` port of ``Motor0.rtc``. The
component's instance name will be ``MotorUnit``.

See Also
========

``rtmgr`` (1)

